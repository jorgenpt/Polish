#!/usr/bin/env python

import os
import polish
import sys

def releasenotes():
    configdict = {}
    for attr in (a for a in dir(polish.config) if not a.startswith('_')):
        configdict[attr] = getattr(polish.config, attr)

    releases_html = ''
    releases = polish.get_releases(polish.config.release_info_dir)
    for release in releases:
        infodict = {}
        for attr in ('version', 'date', 'size', 'signature', 'filename'):
            infodict[attr] = getattr(release, attr)

        sections_html = ''
        for (section, changes) in release.changelog.items():
            changes_html = ''
            for change in changes:
                changes_html += '<li>%s</li>\n' % change
            sections_html += polish.template('releasenotes_section', configdict, infodict, section=section.capitalize(), changes=changes_html)
        releases_html += polish.template('releasenotes_release', configdict, infodict, sections=sections_html)

    return polish.template('releasenotes', configdict, releases=releases_html)

def appcast():
    configdict = {}
    for attr in (a for a in dir(polish.config) if not a.startswith('_')):
        configdict[attr] = getattr(polish.config, attr)

    items = ''
    releases = polish.get_releases(polish.config.release_info_dir)
    for release in releases:
        infodict = {}
        for attr in ('version', 'date', 'size', 'signature', 'filename'):
            infodict[attr] = getattr(release, attr)
        items += polish.template('appcast_item', configdict, infodict)
    return polish.template('appcast', configdict, items=items)

def print_usage():
    bin = sys.argv[0]
    print >>sys.stderr, "Usage: %s ACTION" % bin
    print >>sys.stderr, "  %s releasenotes" % bin
    print >>sys.stderr, "    - prints releasenotes, HTML."
    print >>sys.stderr, "  %s appcast" % bin
    print >>sys.stderr, "    - prints the appcast, XML."

if __name__ == '__main__':
    os.chdir(os.path.dirname(sys.argv[0]))
    if len(sys.argv) > 1:
        action = sys.argv[1].lower()
        if action in ['releasenotes', 'rnotes', 'notes', 'release']:
            print releasenotes().encode('utf-8')
        elif action in ['appcast', 'updates', 'app', 'cast']:
            print appcast().encode('utf-8')
        else:
            print_usage()
    else:
        print_usage()
